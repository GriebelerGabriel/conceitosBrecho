import { assertIsArray, normalizeFileName } from './utils';
import { downloadFile } from './processors';
import { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData } from './converters';
function exportFromJSON(_a) {
    var data = _a.data, _b = _a.fileName, fileName = _b === void 0 ? 'download' : _b, _c = _a.exportType, exportType = _c === void 0 ? 'txt' : _c, _d = _a.replacer, replacer = _d === void 0 ? null : _d, _e = _a.space, space = _e === void 0 ? 4 : _e, _f = _a.processor, processor = _f === void 0 ? downloadFile : _f, _g = _a.withBOM, withBOM = _g === void 0 ? false : _g, _h = _a.delimiter, delimiter = _h === void 0 ? ',' : _h;
    var MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of object';
    var MESSAGE_UNKNOWN_EXPORT_TYPE = "Can't export unknown data type " + exportType + ".";
    var safeData = _prepareData(data);
    var JSONData = _createJSONData(safeData, replacer, space);
    switch (exportType) {
        case 'txt': {
            return processor(JSONData, exportType, normalizeFileName(fileName, 'txt'));
        }
        case 'json': {
            return processor(JSONData, exportType, normalizeFileName(fileName, 'json'));
        }
        case 'csv': {
            assertIsArray(safeData, MESSAGE_IS_ARRAY_FAIL);
            var BOM = '\ufeff';
            var CSVData = createCSVData(safeData, delimiter);
            var content = withBOM ? BOM + CSVData : CSVData;
            return processor(content, exportType, normalizeFileName(fileName, 'csv'));
        }
        case 'xls': {
            assertIsArray(safeData, MESSAGE_IS_ARRAY_FAIL);
            var content = createXLSData(safeData);
            return processor(content, exportType, normalizeFileName(fileName, 'xls'));
        }
        case 'xml': {
            var content = createXMLData(safeData);
            return processor(content, exportType, normalizeFileName(fileName, 'xml'));
        }
        default:
            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);
    }
}
(function (exportFromJSON) {
    exportFromJSON.types = {
        txt: 'txt',
        json: 'json',
        csv: 'csv',
        xls: 'xls',
        xml: 'xml',
    };
    exportFromJSON.processors = { downloadFile: downloadFile };
})(exportFromJSON || (exportFromJSON = {}));
export default exportFromJSON;
